---
layout: post
title: The New Breed of Hacker
---
In light of my last post, I got to thinking some more about old school hackers. Also, at my job, we've got some people who've been here a <em>long</em> time. One in particular, we'll call him Steve, is very smart, but... And, see, that's sort of the thing: I can't put my finger on it exactly. Steve is <em>blazingly</em> smart. But there's clearly a difference between he and I that isn't, I think, just accounted for by the 20 or so (I'm guessing) year difference in our ages.

If I see something I dislike&mdash;something that could be better&mdash;I really want to see it change. I want to be involved in that change if not driving it. Steve is often watching and present. He's paying attention mostly and if you ask him a question he'll have an insightful answer. If someone proposes a change that's actually a good one and addresses a real problem, etc. etc. he'll be glad the change is coming. But he never pushes for it. He never starts a conversation (in the wider sense, I mean; he <em>will</em> say hi to you in the hall or whatever) and hardly chimes in unless addressed directly.

And I think Steve fits a sort of archetype. He's very interested in low-level details (well, actually in almost any kind of technical detail). He seems to be pretty much interested in being left alone and tinkering in his shop to see how things work (to use a light metaphor, here). If something is bad or less than optimal for other programmers around him (and including him), he'll either ignore it or work around it on his own. His solution wont be general enough to apply to everyone, though and he wouldn't publicize it. He's very internally focused. And I associate this stereotype with older programmers or, more accurately, with old school programmers (how long have you been coding, not how long have you been alive).

On the other hand, I think think there's a newer breed of programmer that's becoming or has become very common. And I want to be very specific, here: I'm talking about hackers; folks who code because they enjoy it, not those who do it because its their job. People who would code to solve computer-related problems they have at home even if they were a news anchor or a trail guide. This new breed is more externally focused. We want our solutions to problems to be useful to other people. We want to have a conversation and (often) change the way things are done (for what we see as the better). We want powerful abstractions and like to live up away from the metal, generally.

I haven't cataloged all the differences and, in particular, I'm having a hard time figuring out the attributes for my "new breed" of hacker are. Of course I'm talking about generalizations and stereotypes, here, but I don't think that's intrinsically bad. Basically, I get a sense of a certain amount of cohesion in personality type and behavior in these two groups and it struck me as interesting. What do you think, am I drawing a distinction where there is none? Is this distinction useful for anything? Is there some interesting point I've missed?
